{"version":3,"file":"js/264.7dabdb46.js","mappings":"+vBA8BMA,GAAO,QAAI,MAEXC,GAAO,QAAIC,EAAMC,YAEjBC,GAAiB,SAAS,IAAMF,EAAMC,cAE5C,QAAMC,GAAgBC,IACpBJ,EAAKI,MAAQA,EAERA,IACHL,EAAKK,MAAMC,MAAMD,MAAQ,SAI7B,MAAME,EAASC,IACb,MAAMH,EAAQG,EAAMC,OAAOC,OAASF,EAAMG,aAAaD,MAEvDT,EAAKI,MAAQA,EAAM,GAEnBO,EAAK,oBAAqBX,EAAKI,Q,0eC9CjC,MAAMQ,EAAc,EAEpB,Q,4MCiBMC,GAAiB,SAAS,KAC9B,MAAMC,EAAYb,EAAMc,QAAUC,EAAA,GAAcf,EAAMgB,MAAQ,CAACD,EAAA,GAASf,EAAMgB,MAAOD,EAAA,GAAcf,EAAMgB,OAEzG,MAAO,CACL,SACAhB,EAAMiB,MAAQ,wCAA0C,gCACrDJ,M,gRCzBP,MAAM,EAAc,EAEpB,Q,skBCIA,MAAMK,GAAQ,UAERC,GAAW,SAAS,IAAMD,EAAME,MAAMD,W,uYCR5C,MAAM,EAAc,EAEpB,Q,wECSA,MAAMD,GAAQ,UAERG,GAAc,QAAS,CAC3BC,KAAMJ,EAAME,MAAMD,SAClBI,MAAOL,EAAME,MAAMI,YAGfC,GAAe,QAAS,CAC5BC,iBAAkB,GAClBC,SAAU,GACVC,sBAAuB,KAGnBC,EAAgB,KACpBX,EAAMY,OAAO,OAAQT,IAGjBU,EAAa,O,sjFC5BnB,MAAM,EAAc,EAEpB","sources":["webpack://admin-one-vue-tailwind/./src/components/FilePicker.vue","webpack://admin-one-vue-tailwind/./src/components/FilePicker.vue?b411","webpack://admin-one-vue-tailwind/./src/components/Pill.vue","webpack://admin-one-vue-tailwind/./src/components/Pill.vue?e447","webpack://admin-one-vue-tailwind/./src/components/UserCard.vue","webpack://admin-one-vue-tailwind/./src/components/UserCard.vue?7b65","webpack://admin-one-vue-tailwind/./src/views/Profile.vue","webpack://admin-one-vue-tailwind/./src/views/Profile.vue?9ec9"],"sourcesContent":["<script setup>\nimport { mdiUpload } from '@mdi/js'\nimport { computed, ref, watch } from 'vue'\nimport JbButton from '@/components/JbButton.vue'\n\nconst props = defineProps({\n  modelValue: {\n    type: [Object, File, Array],\n    default: null\n  },\n  label: {\n    type: String,\n    default: 'Upload'\n  },\n  icon: {\n    type: String,\n    default: mdiUpload\n  },\n  accept: {\n    type: String,\n    default: null\n  },\n  color: {\n    type: String,\n    default: 'info'\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst root = ref(null)\n\nconst file = ref(props.modelValue)\n\nconst modelValueProp = computed(() => props.modelValue)\n\nwatch(modelValueProp, value => {\n  file.value = value\n\n  if (!value) {\n    root.value.input.value = null\n  }\n})\n\nconst upload = event => {\n  const value = event.target.files || event.dataTransfer.files\n\n  file.value = value[0]\n\n  emit('update:modelValue', file.value)\n\n  // Use this as an example for handling file uploads\n  // let formData = new FormData()\n  // formData.append('file', file.value)\n\n  // const mediaStoreRoute = `/your-route/`\n\n  // axios\n  //   .post(mediaStoreRoute, formData, {\n  //     headers: {\n  //       'Content-Type': 'multipart/form-data'\n  //     },\n  //     onUploadProgress: progressEvent\n  //   })\n  //   .then(r => {\n  //\n  //   })\n  //   .catch(err => {\n  //\n  //   })\n}\n\n// const uploadPercent = ref(0)\n//\n// const progressEvent = progressEvent => {\n//   uploadPercent.value = Math.round(\n//     (progressEvent.loaded * 100) / progressEvent.total\n//   )\n// }\n</script>\n\n<template>\n  <div class=\"flex items-stretch justify-start relative\">\n    <label class=\"inline-flex\">\n      <jb-button\n        as=\"a\"\n        :label=\"label\"\n        :icon=\"icon\"\n        :color=\"color\"\n        :class=\"{ 'rounded-r-none': file }\"\n      />\n      <input\n        ref=\"root\"\n        type=\"file\"\n        class=\"absolute top-0 left-0 w-full h-full opacity-0 outline-none cursor-pointer -z-1\"\n        :accept=\"accept\"\n        @input=\"upload\"\n      >\n    </label>\n    <div v-if=\"file\">\n      <span class=\"inline-flex px-4 py-2 justify-center bg-gray-100 border-gray-200 border rounded-r\">{{ file.name }}</span>\n    </div>\n  </div>\n</template>\n","import script from \"./FilePicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FilePicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue'\nimport { colorsBg, colorsBorders, colorsOutline } from '@/colors.js'\nimport Icon from '@/components/Icon.vue'\n\nconst props = defineProps({\n  text: {\n    type: String,\n    required: true\n  },\n  type: {\n    type: String,\n    required: true\n  },\n  icon: {\n    type: String,\n    default: null\n  },\n  small: Boolean,\n  outline: Boolean\n})\n\nconst componentClass = computed(() => {\n  const baseColor = props.outline ? colorsOutline[props.type] : [colorsBg[props.type], colorsBorders[props.type]]\n\n  return [\n    'border',\n    props.small ? 'py-0.5 px-2 text-xs rounded-lg mr-1.5' : 'py-2 px-4 rounded-2xl mr-3',\n    ...baseColor\n  ]\n})\n</script>\n\n<template>\n  <div\n    class=\"inline-flex items-center last:mr-0\"\n    :class=\"componentClass\"\n  >\n    <icon\n      v-if=\"icon\"\n      :path=\"icon\"\n      h=\"h-4\"\n      w=\"w-4\"\n      class=\"mr-2\"\n    />\n    <span>{{ text }}</span>\n  </div>\n</template>\n","import script from \"./Pill.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pill.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiCheckDecagram } from '@mdi/js'\nimport Level from '@/components/Level.vue'\nimport UserAvatar from '@/components/UserAvatar.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Pill from '@/components/Pill.vue'\n\nconst store = useStore()\n\nconst userName = computed(() => store.state.userName)\n\n</script>\n\n<template>\n  <card-component rounded=\"\">\n    <level type=\"justify-around lg:justify-center\">\n      <user-avatar class=\"lg:mx-12\" />\n      <div class=\"space-y-3 text-center md:text-left lg:mx-12\">\n        <h1 class=\"text-2xl\">\n          Howdy, <b>{{ userName }}</b\n          >!\n        </h1>\n        <div class=\"flex align-center\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"h-5 w-5 mr-1\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M5.05 4.05a7 7 0 1 1 9.9 9.9L10 18.9l-4.95-4.95a7 7 0 0 1 0-9.9zM10 11a2 2 0 1 0 0-4 2 2 0 0 0 0 4z\"\n              clip-rule=\"evenodd\"\n            />\n          </svg>\n          <span>10 Gorget Court, Sparks,nv, 89441  United States</span>\n        </div>\n        <div class=\"flex justify-center md:block\">\n          <pill text=\"Verified\" type=\"info\" :icon=\"mdiCheckDecagram\" />\n        </div>\n      </div>\n    </level>\n  </card-component>\n</template>\n","import script from \"./UserCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserCard.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { reactive } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiAccount, mdiAccountCircle, mdiLock, mdiMail, mdiAsterisk, mdiFormTextboxPassword } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Divider from '@/components/Divider.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport FilePicker from '@/components/FilePicker.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport UserCard from '@/components/UserCard.vue'\n\nconst store = useStore()\n\nconst profileForm = reactive({\n  name: store.state.userName,\n  email: store.state.userEmail\n})\n\nconst passwordForm = reactive({\n  password_current: '',\n  password: '',\n  password_confirmation: ''\n})\n\nconst submitProfile = () => {\n  store.commit('user', profileForm)\n}\n\nconst submitPass = () => {\n  //\n}\n</script>\n\n<template>\n\n  <user-card />\n\n  <main-section class=\"dark:bg-[#2c2c2c]\">\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <card-component\n        title=\"Edit Profile\"\n        :icon=\"mdiAccountCircle\"\n        form\n        @submit.prevent=\"submitProfile\"\n      >\n        <field\n          label=\"Avatar\"\n          help=\"Max 500kb\"\n        >\n          <file-picker />\n        </field>\n\n        <field\n          label=\"Name\"\n          help=\"Required. Your name\"\n        >\n          <control\n            v-model=\"profileForm.name\"\n            :icon=\"mdiAccount\"\n            name=\"username\"\n            required\n            autocomplete=\"username\"\n          />\n        </field>\n        <field\n          label=\"E-mail\"\n          help=\"Required. Your e-mail\"\n        >\n          <control\n            v-model=\"profileForm.email\"\n            :icon=\"mdiMail\"\n            type=\"email\"\n            name=\"email\"\n            required\n            autocomplete=\"email\"\n          />\n        </field>\n\n        <divider />\n\n        <jb-buttons>\n          <jb-button\n            color=\"info\"\n            type=\"submit\"\n            label=\"Submit\"\n          />\n          <jb-button\n            color=\"info\"\n            label=\"Options\"\n            outline\n          />\n        </jb-buttons>\n      </card-component>\n\n      <card-component\n        title=\"Change Password\"\n        :icon=\"mdiLock\"\n        form\n        @submit.prevent=\"submitPass\"\n      >\n        <field\n          label=\"Current password\"\n          help=\"Required. Your current password\"\n        >\n          <control\n            v-model=\"passwordForm.password_current\"\n            :icon=\"mdiAsterisk\"\n            name=\"password_current\"\n            type=\"password\"\n            required\n            autocomplete=\"current-password\"\n          />\n        </field>\n\n        <divider />\n\n        <field\n          label=\"New password\"\n          help=\"Required. New password\"\n        >\n          <control\n            v-model=\"passwordForm.password\"\n            :icon=\"mdiFormTextboxPassword\"\n            name=\"password\"\n            type=\"password\"\n            required\n            autocomplete=\"new-password\"\n          />\n        </field>\n\n        <field\n          label=\"Confirm password\"\n          help=\"Required. New password one more time\"\n        >\n          <control\n            v-model=\"passwordForm.password_confirmation\"\n            :icon=\"mdiFormTextboxPassword\"\n            name=\"password_confirmation\"\n            type=\"password\"\n            required\n            autocomplete=\"new-password\"\n          />\n        </field>\n\n        <divider />\n\n        <jb-buttons>\n          <jb-button\n            type=\"submit\"\n            color=\"info\"\n            label=\"Submit\"\n          />\n          <jb-button\n            color=\"info\"\n            label=\"Options\"\n            outline\n          />\n        </jb-buttons>\n      </card-component>\n    </div>\n  </main-section>\n\n</template>\n","import script from \"./Profile.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Profile.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["root","file","props","modelValue","modelValueProp","value","input","upload","event","target","files","dataTransfer","emit","__exports__","componentClass","baseColor","outline","colors","type","small","store","userName","state","profileForm","name","email","userEmail","passwordForm","password_current","password","password_confirmation","submitProfile","commit","submitPass"],"sourceRoot":""}